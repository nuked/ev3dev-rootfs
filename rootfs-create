#!/bin/sh
# ------------------------------------------------------------------------------
# rootfs-create - download and configure a minimal rootfs for ev3dev
#
# Must be run as root (use sudo of course!)
# ------------------------------------------------------------------------------

die() { echo -n >&2 "\n$0: $@\n"; exit 1; }

# ------------------------------------------------------------------------------
# Make sure we're running as root

[ "$(whoami)" != "root" ] && die "Sorry, you are not root!"

export DEBIAN_FRONTEND=noninteractive
export DEBCONF_NONINTERACTIVE_SEEN=true
export LC_ALL=C LANGUAGE=C LANG=C

TARGET_ROOTFS_DIR="ev3-rootfs"

# ------------------------------------------------------------------------------
# Make sure we want to overwrite the file if it already exists!

echo    "-------------------------------------------------------------------------------"
echo    " WARNING - If you type \"Yes\" to the prompt, this script"
echo    "           may OVERWRITE the ev3dev-rootfs directory!"
echo
echo    " This script can be run multiple times, for example you may do the download"
echo    " and initial unpacking the first time the script is run, then stop and save"
echo    " that result so that you never have to download again."
echo
echo    " The next time you run the script, you can bypass the download and do the"
echo    " initial configuration and cleanup step, then save the result again."
echo
echo    " You will always be asked for confirmation before a potentially destructive"
echo    " step in the process!"
echo    "-------------------------------------------------------------------------------"

echo -n "   Type \"Yes\" to continue ... "
read YesNo

[ ! "${YesNo}" = "Yes" ] && die " .. aborting, you typed \"${YesNo}\""

# ------------------------------------------------------------------------------
# If we find a pre-existing directory, then ask if we want to recreate a blank one

if [ -d ${TARGET_ROOTFS_DIR} ]; then
    echo    "-------------------------------------------------------------------------------"
    echo    "   Found an existing ${TARGET_ROOTFS_DIR}"
    echo
    echo -n "   Type \"Yes\" to erase the contents, anything else to skip this step ... "
    read YesNo

    if [ "${YesNo}" = "Yes" ]; then
        echo -n "   Erasing the exiting ${TARGET_ROOTFS_DIR} - should only take a few seconds ... "
        rm -rf ${TARGET_ROOTFS_DIR} > /dev/null 2>&1 
        echo    "done."
    fi
fi

# ------------------------------------------------------------------------------
# Download the bare ev3-rootfs directory if we don't already have it

# cd ../ev3dev-rootfs

if [ ! -d ${TARGET_ROOTFS_DIR} ]; then
    echo    "-------------------------------------------------------------------------------"
    echo    "   Downloading a complete grip rootfs from emDebian - this might take a while"
    echo    "   so you might want to tail the multistrap.log file from another shell to keep"
    echo    "   track of progress ... "
    echo
    echo -n "   Type \"Yes\" to continue, anything else to skip this step ... "
    read YesNo

    if [ "${YesNo}" = "Yes" ]; then
#       multistrap -f multistrap.conf > multistrap.log 2>&1
        multistrap -f multistrap.conf 
    fi
else
    echo    "-------------------------------------------------------------------------------"
    echo    "   Checked for existing ev3-rootfs - already exists!"
fi

# ------------------------------------------------------------------------------
# Configuring the rootfs packages

if [ -d ${TARGET_ROOTFS_DIR} ]; then
    echo    "-------------------------------------------------------------------------------"
    echo    "   This step will configure the rootfs - it will take a while and overwrite"
    echo    "   any customizations you have done!"
    echo
    echo -n "   Type \"Yes\" to continue, anything else to skip this step ... "
    read YesNo


    if [ "${YesNo}" = "Yes" ]; then

        if [ ! -e ${TARGET_ROOTFS_DIR}/usr/bin/qemu-arm-static ]; then
            echo -n "    Copying qemu-arm-static to ev3-rootfs/usr/bin ... "
            cp /usr/bin/qemu-arm-static ${TARGET_ROOTFS_DIR}/usr/bin 
            echo    "done."
        fi

        echo -n "    Running the dash.preinst file in ev3-rootfs ... "
        chroot ${TARGET_ROOTFS_DIR} var/lib/dpkg/info/dash.preinst install > /dev/null
        echo "done."
    
        echo    "    Configuring packages in ev3-rootfs - this will take a while!"
        chroot ${TARGET_ROOTFS_DIR} dpkg --configure -a
        echo "done."

        # mount proc -t proc /proc
        # dpkg --configure -a
    fi
fi

# ------------------------------------------------------------------------------
# Clean out the apt archives in /var/

if [ -d ${TARGET_ROOTFS_DIR} ]; then
    echo    "-------------------------------------------------------------------------------"
    echo    "   This step will clean up the rootfs by removing all the extra cruft"
    echo    "   from /var"
    echo
    echo -n "   Type \"Yes\" to continue, anything else to skip this step ... "
    read YesNo


    if [ "${YesNo}" = "Yes" ]; then

        echo
        chroot ${TARGET_ROOTFS_DIR} apt-get clean
        chroot ${TARGET_ROOTFS_DIR} apt-get purge
        echo

        echo -n "   Deleting cached entries from /var/lib/apt/lists ... "
        rm `find ${TARGET_ROOTFS_DIR}/var/lib/apt/lists -maxdepth 1 -type f -not -name "lock"` > /dev/null 2>&1
        echo "done."

        echo -n "   Deleting package lists... "
        rm  ${TARGET_ROOTFS_DIR}/var/cache/apt/*.bin > /dev/null 2>&1
        echo "done."
    fi
fi

echo    "-------------------------------------------------------------------------------"

# ------------------------------------------------------------------------------
